---
suite: test db-deployment
templates:
  - db-deployment.yaml
tests:
  - it: should use local values for container image if deployed as service chart
    set:
      securityContext.hvsdbInit: 
        fsGroup: 2000
      nameOverride: hvs-hello
      image.hvsdb.registry: dockerhub.io
      image.hvsdb.name: postgres:11.7
      image.hvsdb.pullPolicy: IfNotPresent
      securityContext.hvs:
        runAsUser: 1001
        runAsGroup: 1001
      service.hvsdb.containerPort: 5432
      config.dbName: hvsdb
    chart:
      appVersion: v4.1.0
    asserts:
      - hasDocuments:
          count: 1
      - equal:
          path: spec.template.spec.securityContext
          value: 
            fsGroup: 2000
      - equal:
          path: spec.template.spec.containers[0].image
          value: dockerhub.io/postgres:11.7
      - equal:
          path: spec.template.spec.containers[0].imagePullPolicy
          value: IfNotPresent
      - equal:
          path: spec.template.spec.containers[0].securityContext.runAsUser
          value: 1001
      - equal:
          path: spec.template.spec.containers[0].securityContext.runAsGroup
          value: 1001
      - equal:
          path: spec.template.spec.containers[0].ports[0].containerPort
          value: 5432
      - equal:
          path: spec.template.spec.containers[0].env[0].value
          value: hvsdb
      - equal:
          path: spec.template.spec.containers[0].env[1].valueFrom.secretKeyRef.name
          value: hvs-hellodb-credentials

  - it: should override name and namespace
    set:
      nameOverride: hvs-hello
    chart:
      version: 0.1.0
      appVersion: v4.1.0
    release:
      namespace: test
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - isAPIVersion:
          of: apps/v1
      - equal:
          path: metadata.name
          value: hvs-hellodb
      - equal:
          path: metadata.labels
          value: 
            helm.sh/chart: hvs-0.1.0
            app.kubernetes.io/version: "v4.1.0"
            app.kubernetes.io/name: hvs-hellodb
      - equal:
          path: metadata.namespace
          value: test
      - equal:
          path: spec.selector.matchLabels
          value: 
            app.kubernetes.io/name: hvs-hellodb
      - equal:
          path: spec.template.metadata.labels
          value:
            app.kubernetes.io/name: hvs-hellodb
      - equal:
          path: spec.template.spec.containers[0].name
          value: hvs-hellodb
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].name
          value: hvs-hellodb-config
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[1].name
          value: hvs-hellodb-certs
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[2].name
          value: hvs-hellodb-data
      - equal:
          path: spec.template.spec.volumes[0].name
          value: hvs-hellodb-config
      - equal:
          path: spec.template.spec.volumes[0].configMap.name
          value: hvs-hellodb
      - equal:
          path: spec.template.spec.volumes[1].name
          value: hvs-hellodb-certs
      - equal:
          path: spec.template.spec.volumes[1].secret.secretName
          value: hvs-hellodb-certs
      - equal:
          path: spec.template.spec.volumes[2].name
          value: hvs-hellodb-data
      - equal:
          path: spec.template.spec.volumes[2].persistentVolumeClaim.claimName
          value: hvs-hellodb
 