# Default values for WLS

nameOverride: "" # The name for WLS chart<br> (Default: `.Chart.Name`)
controlPlaneHostname: <user input> # K8s control plane IP/Hostname<br> (**REQUIRED**)

# Warning: Ensure that the naming is applied consistently for all dependent services when modifying nameOverride
# TODO: Services should be be able to be deployed in different namespaces
dependentServices: # The dependent Service Name for deploying  Cerificate Management Service chart, default is the chart name and override is from nameOverride value.
  cms: cms
  aas: aas
  hvs: hvs

config:
  envVarPrefix: WLS
  dbPort: 5432 # PostgreSQL DB port
  dbSSL: on # PostgreSQL DB SSL<br> (Allowed Values: `on`/`off`)
  dbSSLCert: /etc/postgresql/secrets/server.crt # PostgreSQL DB SSL Cert
  dbSSLKey: /etc/postgresql/secrets/server.key  # PostgreSQL DB SSL Key
  dbSSLCiphers: ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256 # PostgreSQL DB SSL Ciphers
  dbListenAddresses: "*" # PostgreSQL DB Listen Address
  dbName: wlsdb # WLS DB Name
  dbSSLMode: verify-full # PostgreSQL DB SSL Mode

secret:
  dbUsername: wlsdbuser # DB Username for WLS DB
  dbPassword: wlsdbpassword # DB Password for WLS DB
  adminUsername: wlsAdminUser # Admin Username for WLS
  adminPassword: wlsAdminPass # Admin Password for WLS

image:
  db:
    registry: dockerhub.io # The image registry where PostgreSQL image is pulled from
    name: postgres:11.7 # The image name of PostgreSQL
    pullPolicy: Always # The pull policy for pulling from container registry for PostgreSQL image
  svc:
    registry: <user input> # The image registry where WLS image is pushed<br> (**REQUIRED**)
    name: <user input> # The image name with which CMS image is pushed to registry<br> (**REQUIRED**)
    pullPolicy: Always # The pull policy for pulling from container registry for WLS<br> (Allowed values: `Always`/`IfNotPresent`)

storage:
  nfs:
    server: <user input> # The NFS Server IP/Hostname<br> (**REQUIRED**)
    reclaimPolicy: Retain # The reclaim policy for NFS<br> (Allowed values: `Retain`/)
    accessModes: ReadWriteMany # The access modes for NFS<br> (Allowed values: `ReadWriteMany`)
    path: /mnt/nfs_share # The path for storing persistent data on NFS
    dbSize: 5Gi # The DB size for storing DB data for WLS in NFS path
    configSize: 10Mi # The configuration size for storing config for WLS in NFS path
    logsSize: 1Gi # The logs size for storing logs for WLS in NFS path
    baseSize: 1.1Gi # The base volume size (configSize + logSize)

securityContext:
  wlsdbInit: # The fsGroup id for init containers for HVS DB
    fsGroup: 2000
  wlsdb: # The security content for HVS DB Service Pod
    runAsUser: 1001
    runAsGroup: 1001
  wlsInit: # The fsGroup id for init containers for WLS
    fsGroup: 1001
  wls: # The security content for WLS Pod
    runAsUser: 1001
    runAsGroup: 1001
    capabilities:
      drop:
        - all
    allowPrivilegeEscalation: false

service:
  directoryName: wls
  cms:
    containerPort: 8445 # The containerPort on which CMS can listen
  aas: 
    containerPort: 8444 # The containerPort on which AAS can listen
  hvs:
    containerPort: 8443 # The containerPort on which HVS can listen
  wlsdb:
    containerPort: 5432 # The containerPort on which WLS DB can listen 
  wls:
    containerPort: 5000 # The containerPort on which WLS can listen 
    port: 30447 # The externally exposed NodePort on which WLS can listen to external traffic
